Разработайте приложение с клиент-серверной архитектурой, которое использует TCP/IP и обеспечивает следующее взаимодействие: клиент №1 отправляет сообщения серверу, который затем пересылает их клиенту №2. Вы можете указать IP-адрес и порт сервера в командной строке или с помощью стандартных функций ввода. Сообщения для передачи вводятся с клавиатуры и передаются в цикле. Таким образом, клиент №1 может отправить несколько сообщений клиенту №2. При передаче сообщения "The End" необходимо завершить работу клиентов и сервера. Приложение должно функционировать на одном, двух или трех компьютерах с различными комбинациями клиентов и сервера.

Описание программы:
Программа состоит из трех частей: сервера, клиента №1 и клиента №2. Сервер принимает сообщения от клиента №1 и пересылает их клиенту №2, используя протокол TCP/IP.

Серверная часть (server.c):

Сервер создает сокет и связывает его с указанным пользователем IP-адресом и портом. Затем сервер начинает слушать входящие соединения.
При подключении клиента №1, сервер создает отдельный сокет для этого соединения и начинает обрабатывать сообщения от клиента №1.
При подключении клиента №2, сервер создает еще один отдельный сокет и начинает пересылать сообщения от клиента №1 клиенту №2.
Если сервер получает сообщение "The End", он закрывает соединение с клиентами и завершает работу.
Клиент №1 (client1.c):

Клиент №1 создает сокет и подключается к серверу, используя указанный IP-адрес и порт.
Затем клиент №1 считывает сообщения с клавиатуры и отправляет их серверу.
Если отправлено сообщение "The End", клиент №1 закрывает соединение и завершает работу.
Клиент №2 (client2.c):

Клиент №2 создает сокет и подключается к серверу, используя указанный IP-адрес и порт.
Затем клиент №2 ожидает сообщения от сервера и выводит их на экран.
Если получено сообщение "The End", клиент №2 закрывает соединение и завершает работу.